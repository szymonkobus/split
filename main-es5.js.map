{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","Wager","columns","transaction_history","cost","payer_obj","payees_obj","isNaN","length","payees","map","_value","payer","part","last_state","new_state","key","balance","change","payee","unshift","name","includes","push","dic","wager","AppComponent","route","names","queryParams","subscribe","params","ppl","undefined","split","addPerson","console","log","initial_names","HTMLtable","addTransaction","renderRows","n","Math","round","addRow","addColumn","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\n\ninterface transaction {\n  balance: number;\n  change: number;\n}\n\nclass Wager {\n  transaction_history: {[name: string]: transaction}[]\n  columns: string[]\n  \n  constructor() {\n    this.columns = []\n    this.transaction_history = [{}]\n  }\n  \n  addTransaction(cost:number, payer_obj: any [], payees_obj: any []) {\n    // validate input\n    if (cost <=0 || isNaN(cost) || payer_obj.length==0 || payees_obj.length==0 ) { return }\n    \n    const payees: string [] = payees_obj.map( e => e._value)\n    const payer: string = payer_obj[0]._value\n    const part = cost / payees_obj.length\n    const last_state = this.transaction_history[0]\n\n    var new_state = {}\n    for (var key in last_state) {\n      new_state[key] = {balance: last_state[key].balance, change: 0}\n    }\n\n    for (var payee of payees) {\n      new_state[payee].balance = new_state[payee].balance - part\n      new_state[payee].change  = -1 * part\n    }\n    new_state[payer].balance += cost\n    new_state[payer].change  += cost\n\n    this.transaction_history.unshift(new_state)\n  }\n\n  addPerson( name:string ){\n    if (name==\"\" || this.columns.includes(name)) { return } // validate input\n    this.columns.push(name);\n    this.transaction_history.map( (dic) => {dic[name]={balance:0,change:0}; return dic})\n  }\n}\n\nconst wager:Wager = new Wager()\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  names = wager.columns\n  transaction_history = wager.transaction_history\n\n  //url data\n  initial_names: string\n  // form input\n  payer: string\n  payees: string []\n\n  constructor( private route: ActivatedRoute){\n    this.route.queryParams.subscribe(params => {\n      if(params.ppl == undefined) { return }\n      for (let name of params.ppl.split(\";\") )\n      { wager.addPerson(name) }\n    })\n  }\n\n  ngOnInit(): void {\n    console.log(this.initial_names)\n  }\n  addRow(cost:number, payer:any [], payees_obj: any [], HTMLtable){\n    console.log(payer)\n    wager.addTransaction(cost,payer,payees_obj)\n    HTMLtable.renderRows()  // re-render after adding row\n  }\n  addColumn(name:string){\n    wager.addPerson( name )\n  }\n  round(n:number){\n    return Math.round(n * 10) / 10\n  }\n}\n\n// TODO: reset transaction after clicking(only who pays maybe)\n// TODO: mamke everyone seleced at beginning (or selct all button)\n// TODO: change icaon at top","<!-- adding new transaction form -->\n<form>\n  <div class=\"payer_div\">\n    <span class='question'>Giver</span>\n    <mat-selection-list class='payer' [multiple]='false' #payer> <!-- (selectionChange)=\"onSelection($event, shoes.selectedOptions.selected)\" > --> <!--class='payees'-->\n      <mat-list-option *ngFor=\"let person of names\" [value]='person'>\n        {{person}}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n\n  <div class=\"payees_div\">\n    <span class='question'>Recivers</span>\n    <mat-selection-list class='payees' #payees>\n      <mat-list-option *ngFor=\"let person of names\" [value]='person'>\n        {{person}}\n      </mat-list-option>\n    </mat-selection-list>\n  </div>\n \n  <mat-form-field>\n    <mat-label>Cost</mat-label>\n    <input matInput type=number placeholder=0 #ammount >\n  </mat-form-field>\n\n  <div> \n    <button mat-raised-button type=button \n    (click)=\"addRow(ammount.valueAsNumber, payer.selectedOptions.selected, payees.selectedOptions.selected,HTMLtable)\"> \n    Add Record \n    </button>\n  </div>\n</form>\n\n\n<!-- dynamic table -->\n<table mat-table [dataSource]=\"transaction_history\" #HTMLtable class=\"mat-elevation-z8\">\n  <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of names; let i = index;\">\n    <th class=\"name\" mat-header-cell *matHeaderCellDef> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\">\n      <span class=\"balance\" > {{ round(element[column].balance)}}</span>\n      <span class=\"change\" [ngClass]=\n      \"{'negative':element[column].change<0,\n        'positive':element[column].change>0,\n        'zero':element[column].change == 0 }\"> \n        {{round(element[column].change)}}\n      </span>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"names; sticky: true\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: names;\"></tr>\n</table> \n\n<!-- add Row -->\n<form>\n  <mat-form-field>\n    <mat-label>New Person</mat-label>\n    <input matInput type=string placeholder=\"Tomek\" #new_person >\n  </mat-form-field>\n  <button mat-raised-button (click)=\"addColumn(new_person.value)\">Add Person</button>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n//import {Component, ViewChild} from '@angular/core';\n\nimport { MatTableModule } from '@angular/material/table'\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatListModule } from '@angular/material/list'; \n\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    \n    MatTableModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatListModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n\n    //ViewChild,\n    //Component,\n\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}